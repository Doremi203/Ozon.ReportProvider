services:
  database:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASEOPTIONS__USERID}
      POSTGRES_PASSWORD: ${DATABASEOPTIONS__PASSWORD}
      POSTGRES_DB: ${DATABASEOPTIONS__DATABASE}
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DATABASESETTINGS__USERID}" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: >-
        report_request_events:3:1,
    ports:
      - "9093:9093"
    expose:
      - 9093
      - 9092
    volumes:
      - kafkadata:/kafka
  zookeeper:
    image: zookeeper:latest
    ports:
      - 2181:2181
    volumes:
      - zkdata:/data
      - zkdatalog:/datalog
      - zklogs:/logs

volumes:
  dbdata:
  kafkadata:
  zkdata:
  zkdatalog:
  zklogs: